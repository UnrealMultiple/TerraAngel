--- src/Terraria/Terraria/Player.cs
+++ src/TerraAngel/Terraria/Player.cs
@@ -35,6 +_,7 @@
 using Terraria.UI.Gamepad;
 using Terraria.Utilities;
 using Terraria.WorldBuilding;
+using TerraAngel.Tools;
 
 namespace Terraria;
 public class Player : Entity, IFixLoadedData
@@ -533,6 +_,7 @@
         }
     }
 
+    public bool TerraAngelUser = false;
     public int emoteTime;
     public CreativeUnlocksTracker creativeTracker;
     private static byte[] ENCRYPTION_KEY = new UnicodeEncoding().GetBytes("h3y_gUyZ");
@@ -907,8 +_,10 @@
     public int potionDelay;
     public byte difficulty;
     public byte wetSlime;
-    public HitTile hitTile;
+    public HitTile? _hitTile;
-    public HitTile hitReplace;
+    public HitTile? _hitReplace;
+    public HitTile hitTile { get { if (_hitTile is null) _hitTile = new HitTile(); return _hitTile; } }
+    public HitTile hitReplace { get { if (_hitReplace is null) _hitReplace = new HitTile(); return _hitReplace; } }
     public int jump;
     public int head = -1;
     public int body = -1;
@@ -11562,6 +_,7 @@
 
     public void Yoraiz0rEye()
     {
+        if ((OptimizationTool.OptimizationToolCache?.DisableDust ?? false) || ClientConfig.Settings.IgnoreReLogicBullshit) return;
         int num = 0;
         num += bodyFrame.Y / 56;
         if (num >= Main.OffsetsPlayerHeadgear.Length)
@@ -13809,7 +_,7 @@
             shinyStone = true;
         }
 
-        if (currentItem.type == 4989)
+        if (currentItem.type == 4989 || ToolManager.GetTool<InfiniteFlightTool>().Enabled)
         {
             empressBrooch = true;
             moveSpeed += 0.075f;
@@ -16368,6 +_,7 @@
         ZoneLihzhardTemple = false;
         int num3 = (int)base.Center.X / 16;
         int num4 = (int)base.Center.Y / 16;
+        if (!Main.tile.InWorld(num3, num4)) return;
         if (Main.tile[num3, num4] != null && Main.tile[num3, num4].wall == 87)
         {
             ZoneLihzhardTemple = true;
@@ -17823,7 +_,7 @@
                 }
 
                 int num5 = tile.frameY / 22;
-                if (num5 < TorchID.Count)
+                if (num5 < 22 && num5 >= 0)
                 {
                     nearbyTorch[num5] = true;
                     if (num5 == 17 && (tile.liquid == 0 || tile.liquidType() != 0))
@@ -18292,7 +_,9 @@
         return Main.player[FindClosest(new Vector2(x * 16, y * 16), 1, 1)].RollLuck(range);
     }
 
+    public void ResetEffects() => TerraAngel.Hooks.PlayerHooks.PlayerResetEffectsHook((x) => x._ResetEffects(), this);
+
-    public void ResetEffects()
+    private void _ResetEffects()
     {
         if (extraAccessory && (Main.expertMode || Main.gameMenu))
         {
@@ -19562,7 +_,7 @@
 
         int num = (int)(position.X + (float)(width / 2)) / 16;
         int num2 = (int)(position.Y - 8f) / 16;
-        if (!WorldGen.IsRope(num, num2))
+        if (!WorldGen.InWorld(num, num2) || Main.tile[num, num2] == null || !Main.tile[num, num2].active() || !Main.tileRope[Main.tile[num, num2].type])
         {
             return;
         }
@@ -23731,7 +_,7 @@
 
     public static int GetFloorTileType(int x, int y)
     {
-        return ((int?)GetFloorTile(x, y)?.type) ?? (-1);
+        return (int)GetFloorTile(x, y).type;
     }
 
     private void MakeFloorDust(bool Falling, int type, int paintColor)
@@ -28334,28 +_,35 @@
             CheckCrackedBrickBreak();
         }
 
+        if ((!ToolManager.GetTool<NoClipTool>().Enabled && i == Main.myPlayer) || (i != Main.myPlayer && Main.tile.IsTileInLoadedSection(((int)(position.X / 16f)), ((int)(position.Y / 16f)))))
+        {
         if (!shimmering)
         {
             SlopeDownMovement();
+            // patch context
             bool flag27 = mount.Type == 7 || mount.Type == 8 || mount.Type == 12 || mount.Type == 44 || mount.Type == 49;
             if (velocity.Y == gravity && (!mount.Active || (!mount.Cart && mount.Type != 48 && !flag27)))
             {
                 Collision.StepDown(ref position, ref velocity, width, height, ref stepSpeed, ref gfxOffY, (int)gravDir, waterWalk || waterWalk2);
             }
-
+            // patch context
             if (gravDir == -1f)
             {
+                // patch context
                 if ((carpetFrame != -1 || velocity.Y <= gravity) && !controlUp)
                 {
                     Collision.StepUp(ref position, ref velocity, width, height, ref stepSpeed, ref gfxOffY, (int)gravDir, controlUp);
                 }
+                // patch context
             }
             else if ((carpetFrame != -1 || velocity.Y >= gravity) && !controlDown && !mount.Cart && !flag27 && grappling[0] == -1)
             {
                 Collision.StepUp(ref position, ref velocity, width, height, ref stepSpeed, ref gfxOffY, (int)gravDir, controlUp);
             }
+            // patch context
         }
 
+        // patch context
         oldPosition = position;
         oldDirection = direction;
         bool falling = false;
@@ -28550,20 +_,22 @@
         {
             FloorVisuals(falling);
         }
-
+        // patch context
         if (whoAmI == Main.myPlayer && !shimmering)
         {
             Collision.SwitchTiles(position, width, height, oldPosition, 1);
         }
-
+        // patch context
         PressurePlateHelper.UpdatePlayerPosition(this);
         BordersMovement();
         numMinions = 0;
         slotsMinions = 0f;
+        // patch context
         if (Main.netMode != 2 && mount.Type != 8)
         {
             ItemCheck_ManageRightClickFeatures();
         }
+        }
 
         ItemCheckWrapped(i);
         PlayerFrame();
@@ -28716,6 +_,7 @@
         return result;
     }
 
+
     private void AdjustRemainingPotionSickness()
     {
         if (whoAmI == Main.myPlayer)
@@ -31202,7 +_,9 @@
         HotbarOffset = 0;
     }
 
+    private void ItemCheckWrapped(int i) => TerraAngel.Hooks.PlayerHooks.PlayerItemCheckHook((x, y) => x._ItemCheckWrapped(y), this, i);
+
-    private void ItemCheckWrapped(int i)
+    private void _ItemCheckWrapped(int i)
     {
         int num;
         if (!controlLeft && !controlRight && !controlUp && !controlDown && PlayerInput.UsingGamepad && Main.SmartCursorIsUsed)
@@ -37782,6 +_,17 @@
 
     public void Teleport(Vector2 newPos, int Style = 0, int extraInfo = 0)
     {
+        
+        if (ToolManager.GetTool<TeleportTool>().LogTargetPosition)
+        {
+            ClientLoader.Console.WriteLine(GetString($"Teleported to {newPos.ToString()} (Style: {Style}, ExtraInfo: {extraInfo})"));
+        }
+        
+        if (!ToolManager.GetTool<TeleportTool>().AllowTeleport)
+        {
+            return;
+        }
+        
         try
         {
             _funkytownAchievementCheckCooldown = 100;
@@ -38121,6 +_,8 @@
             Main.ActivePlayerFileData.StartPlayTimer();
             Hooks.EnterWorld(whoAmI);
         }
+
+        TerraAngel.Hooks.PlayerHooks.presenceUpdateCount = 0;
     }
 
     public bool Spawn_GetPositionAtWorldSpawn(ref int floorX, ref int floorY)
@@ -38191,6 +_,7 @@
             bool flag = false;
             for (int j = -1; j <= 1; j++)
             {
+                if (!Main.tile.InWorld(x + j, y + i)) continue;
                 Tile tile = Main.tile[x + j, y + i];
                 if (tile.nactive() && (Main.tileSolid[tile.type] || !Main.tileSolidTop[tile.type]))
                 {
@@ -38239,7 +_,7 @@
         {
             for (int j = floorY - 3; j < floorY; j++)
             {
-                if (Main.tile[i, j] != null)
+                if (Main.tile.InWorld(i, j))
                 {
                     if (Main.tile[i, j].nactive() && Main.tileSolid[Main.tile[i, j].type] && !Main.tileSolidTop[Main.tile[i, j].type])
                     {
@@ -38398,6 +_,17 @@
 
     public double Hurt(PlayerDeathReason damageSource, int Damage, int hitDirection, bool pvp = false, bool quiet = false, bool Crit = false, int cooldownCounter = -1, bool dodgeable = true)
     {
+        if (whoAmI == Main.myPlayer && ToolManager.GetTool<AntiHurtTool>().Enabled)
+        {
+            statLife = statLifeMax2;
+            if (ToolManager.GetTool<AntiHurtTool>().FramesSinceLastLifePacket == 0)
+            {
+                ToolManager.GetTool<AntiHurtTool>().FramesSinceLastLifePacket = 6;
+                NetMessage.SendData(MessageID.PlayerLife, -1, -1, null, whoAmI);
+            }
+            return 0.0d;
+        }
+
         if (shimmering && AllowShimmerDodge(damageSource, cooldownCounter, dodgeable))
         {
             return 0.0;
@@ -38993,6 +_,12 @@
 
     public void KillMe(PlayerDeathReason damageSource, double dmg, int hitDirection, bool pvp = false)
     {
+        if (whoAmI == Main.myPlayer && ToolManager.GetTool<AntiHurtTool>().Enabled)
+        {
+            NetMessage.SendData(MessageID.PlayerLife, -1, -1, null, whoAmI);
+            return;
+        }
+
         if (creativeGodMode || dead)
         {
             return;
@@ -39826,13 +_,23 @@
 
     private void PlaceThing_Walls()
     {
-        if (inventory[selectedItem].createWall < 0 || !(position.X / 16f - (float)tileRangeX - (float)inventory[selectedItem].tileBoost - (float)blockRange <= (float)tileTargetX) || !((position.X + (float)width) / 16f + (float)tileRangeX + (float)inventory[selectedItem].tileBoost - 1f + (float)blockRange >= (float)tileTargetX) || !(position.Y / 16f - (float)tileRangeY - (float)inventory[selectedItem].tileBoost - (float)blockRange <= (float)tileTargetY) || !((position.Y + (float)height) / 16f + (float)tileRangeY + (float)inventory[selectedItem].tileBoost - 2f + (float)blockRange >= (float)tileTargetY))
+        bool blockedByRangeCheck = !(position.X / 16f - (float)tileRangeX - (float)inventory[selectedItem].tileBoost - (float)blockRange <= (float)tileTargetX) || !((position.X + (float)width) / 16f + (float)tileRangeX + (float)inventory[selectedItem].tileBoost - 1f + (float)blockRange >= (float)tileTargetX) || !(position.Y / 16f - (float)tileRangeY - (float)inventory[selectedItem].tileBoost - (float)blockRange <= (float)tileTargetY) || !((position.Y + (float)height) / 16f + (float)tileRangeY + (float)inventory[selectedItem].tileBoost - 2f + (float)blockRange >= (float)tileTargetY);
+
+        if (ToolManager.GetTool<InfiniteReachTool>().Enabled || BuilderModeTool.Enabled)
+            blockedByRangeCheck = false;
+
+        if (inventory[selectedItem].createWall < 0 || blockedByRangeCheck)
         {
             return;
         }
 
+        bool wallPlaceBlockedByNoFreeSpace = (!Main.tile[tileTargetX + 1, tileTargetY].active() && Main.tile[tileTargetX + 1, tileTargetY].wall <= 0 && !Main.tile[tileTargetX - 1, tileTargetY].active() && Main.tile[tileTargetX - 1, tileTargetY].wall <= 0 && !Main.tile[tileTargetX, tileTargetY + 1].active() && Main.tile[tileTargetX, tileTargetY + 1].wall <= 0 && !Main.tile[tileTargetX, tileTargetY - 1].active() && Main.tile[tileTargetX, tileTargetY - 1].wall <= 0);
+
+        if (BuilderModeTool.Enabled)
+            wallPlaceBlockedByNoFreeSpace = false;
+
         cursorItemIconEnabled = true;
-        if (!ItemTimeIsZero || itemAnimation <= 0 || !controlUseItem || (!Main.tile[tileTargetX + 1, tileTargetY].active() && Main.tile[tileTargetX + 1, tileTargetY].wall <= 0 && !Main.tile[tileTargetX - 1, tileTargetY].active() && Main.tile[tileTargetX - 1, tileTargetY].wall <= 0 && !Main.tile[tileTargetX, tileTargetY + 1].active() && Main.tile[tileTargetX, tileTargetY + 1].wall <= 0 && !Main.tile[tileTargetX, tileTargetY - 1].active() && Main.tile[tileTargetX, tileTargetY - 1].wall <= 0) || Main.tile[tileTargetX, tileTargetY].wall == inventory[selectedItem].createWall)
+        if (((!ItemTimeIsZero || itemAnimation <= 0) && !BuilderModeTool.Enabled) || !controlUseItem || wallPlaceBlockedByNoFreeSpace || Main.tile[tileTargetX, tileTargetY].wall == inventory[selectedItem].createWall)
         {
             return;
         }
@@ -39964,7 +_,13 @@
     {
         Item item = inventory[selectedItem];
         int tileToCreate = item.createTile;
+
-        if (tileToCreate < 0 || !(position.X / 16f - (float)tileRangeX - (float)item.tileBoost - (float)blockRange <= (float)tileTargetX) || !((position.X + (float)width) / 16f + (float)tileRangeX + (float)item.tileBoost - 1f + (float)blockRange >= (float)tileTargetX) || !(position.Y / 16f - (float)tileRangeY - (float)item.tileBoost - (float)blockRange <= (float)tileTargetY) || !((position.Y + (float)height) / 16f + (float)tileRangeY + (float)item.tileBoost - 2f + (float)blockRange >= (float)tileTargetY))
+        bool blockedByRangeCheck = !(position.X / 16f - (float)tileRangeX - (float)item.tileBoost - (float)blockRange <= (float)tileTargetX) || !((position.X + (float)width) / 16f + (float)tileRangeX + (float)item.tileBoost - 1f + (float)blockRange >= (float)tileTargetX) || !(position.Y / 16f - (float)tileRangeY - (float)item.tileBoost - (float)blockRange <= (float)tileTargetY) || !((position.Y + (float)height) / 16f + (float)tileRangeY + (float)item.tileBoost - 2f + (float)blockRange >= (float)tileTargetY);
+
+        if (ToolManager.GetTool<InfiniteReachTool>().Enabled || BuilderModeTool.Enabled)
+            blockedByRangeCheck = false;
+
+        if (tileToCreate < 0 || blockedByRangeCheck)
         {
             return;
         }
@@ -39995,7 +_,7 @@
             }
         }
 
-        if (canUse && ((!tile.active() && !flag) || (Main.tileCut[tile.type] && tile.type != 484) || (tile.type >= 373 && tile.type <= 375) || tile.type == 461 || tileToCreate == 199 || tileToCreate == 23 || tileToCreate == 662 || tileToCreate == 661 || tileToCreate == 2 || tileToCreate == 109 || tileToCreate == 60 || tileToCreate == 70 || tileToCreate == 633 || Main.tileMoss[tileToCreate] || TileID.Sets.BreakableWhenPlacing[tile.type]) && ItemTimeIsZero && itemAnimation > 0 && controlUseItem)
+        if (canUse && ((!tile.active() && !flag) || (Main.tileCut[tile.type] && tile.type != 484) || (tile.type >= 373 && tile.type <= 375) || tile.type == 461 || tileToCreate == 199 || tileToCreate == 23 || tileToCreate == 662 || tileToCreate == 661 || tileToCreate == 2 || tileToCreate == 109 || tileToCreate == 60 || tileToCreate == 70 || tileToCreate == 633 || Main.tileMoss[tileToCreate] || TileID.Sets.BreakableWhenPlacing[tile.type]) && (ItemTimeIsZero && itemAnimation > 0 || BuilderModeTool.Enabled) && controlUseItem)
         {
             bool canPlace = false;
             bool newObjectType = false;
@@ -41537,6 +_,9 @@
             {
                 canPlace = true;
             }
+
+            if (BuilderModeTool.Enabled)
+                canPlace = true;
         }
 
         if (flag && Main.tile[tileTargetX, tileTargetY].active())
@@ -42062,7 +_,12 @@
 
     private void PlaceThing_PaintScrapper()
     {
-        if (ItemID.Sets.IsPaintScraper[inventory[selectedItem].type] && position.X / 16f - (float)tileRangeX - (float)inventory[selectedItem].tileBoost - (float)blockRange <= (float)tileTargetX && (position.X + (float)width) / 16f + (float)tileRangeX + (float)inventory[selectedItem].tileBoost - 1f + (float)blockRange >= (float)tileTargetX && position.Y / 16f - (float)tileRangeY - (float)inventory[selectedItem].tileBoost - (float)blockRange <= (float)tileTargetY && (position.Y + (float)height) / 16f + (float)tileRangeY + (float)inventory[selectedItem].tileBoost - 2f + (float)blockRange >= (float)tileTargetY)
+        bool allowedByRangeCheck = position.X / 16f - (float)tileRangeX - (float)inventory[selectedItem].tileBoost - (float)blockRange <= (float)tileTargetX && (position.X + (float)width) / 16f + (float)tileRangeX + (float)inventory[selectedItem].tileBoost - 1f + (float)blockRange >= (float)tileTargetX && position.Y / 16f - (float)tileRangeY - (float)inventory[selectedItem].tileBoost - (float)blockRange <= (float)tileTargetY && (position.Y + (float)height) / 16f + (float)tileRangeY + (float)inventory[selectedItem].tileBoost - 2f + (float)blockRange >= (float)tileTargetY;
+
+        if (ToolManager.GetTool<InfiniteReachTool>().Enabled || BuilderModeTool.Enabled)
+            allowedByRangeCheck = true;
+
+        if (ItemID.Sets.IsPaintScraper[inventory[selectedItem].type] && allowedByRangeCheck)
         {
             int num = tileTargetX;
             int num2 = tileTargetY;
@@ -42082,7 +_,7 @@
         }
 
         cursorItemIconEnabled = true;
-        if (!ItemTimeIsZero || itemAnimation <= 0 || !controlUseItem)
+        if (((!ItemTimeIsZero || itemAnimation <= 0) && !BuilderModeTool.Enabled) || !controlUseItem)
         {
             return;
         }
@@ -42137,7 +_,7 @@
         }
 
         cursorItemIconEnabled = true;
-        if (ItemTimeIsZero && itemAnimation > 0 && controlUseItem)
+        if ((BuilderModeTool.Enabled || ItemTimeIsZero && itemAnimation > 0) && controlUseItem)
         {
             if (WorldGen.paintTile(x, y, 0, broadCast: true) || WorldGen.paintCoatTile(x, y, 0, broadcast: true))
             {
@@ -42152,7 +_,12 @@
 
     private void PlaceThing_PaintRoller()
     {
-        if ((inventory[selectedItem].type != 1072 && inventory[selectedItem].type != 1544) || !(position.X / 16f - (float)tileRangeX - (float)inventory[selectedItem].tileBoost - (float)blockRange <= (float)tileTargetX) || !((position.X + (float)width) / 16f + (float)tileRangeX + (float)inventory[selectedItem].tileBoost - 1f + (float)blockRange >= (float)tileTargetX) || !(position.Y / 16f - (float)tileRangeY - (float)inventory[selectedItem].tileBoost - (float)blockRange <= (float)tileTargetY) || !((position.Y + (float)height) / 16f + (float)tileRangeY + (float)inventory[selectedItem].tileBoost - 2f + (float)blockRange >= (float)tileTargetY))
+        bool blockedByRangeCheck = !(position.X / 16f - (float)tileRangeX - (float)inventory[selectedItem].tileBoost - (float)blockRange <= (float)tileTargetX) || !((position.X + (float)width) / 16f + (float)tileRangeX + (float)inventory[selectedItem].tileBoost - 1f + (float)blockRange >= (float)tileTargetX) || !(position.Y / 16f - (float)tileRangeY - (float)inventory[selectedItem].tileBoost - (float)blockRange <= (float)tileTargetY) || !((position.Y + (float)height) / 16f + (float)tileRangeY + (float)inventory[selectedItem].tileBoost - 2f + (float)blockRange >= (float)tileTargetY);
+
+        if (ToolManager.GetTool<InfiniteReachTool>().Enabled || BuilderModeTool.Enabled)
+            blockedByRangeCheck = false;
+
+        if ((inventory[selectedItem].type != 1072 && inventory[selectedItem].type != 1544) || blockedByRangeCheck)
         {
             return;
         }
@@ -42162,7 +_,7 @@
         if (Main.tile[num, num2] != null && Main.tile[num, num2].wall > 0)
         {
             cursorItemIconEnabled = true;
-            if (ItemTimeIsZero && itemAnimation > 0 && controlUseItem)
+            if ((BuilderModeTool.Enabled || ItemTimeIsZero && itemAnimation > 0) && controlUseItem)
             {
                 TryPainting(num, num2, paintingAWall: true);
             }
@@ -42171,7 +_,12 @@
 
     private void PlaceThing_Paintbrush()
     {
-        if ((inventory[selectedItem].type != 1071 && inventory[selectedItem].type != 1543) || !(position.X / 16f - (float)tileRangeX - (float)inventory[selectedItem].tileBoost - (float)blockRange <= (float)tileTargetX) || !((position.X + (float)width) / 16f + (float)tileRangeX + (float)inventory[selectedItem].tileBoost - 1f + (float)blockRange >= (float)tileTargetX) || !(position.Y / 16f - (float)tileRangeY - (float)inventory[selectedItem].tileBoost - (float)blockRange <= (float)tileTargetY) || !((position.Y + (float)height) / 16f + (float)tileRangeY + (float)inventory[selectedItem].tileBoost - 2f + (float)blockRange >= (float)tileTargetY))
+        bool blockedByRangeCheck = !(position.X / 16f - (float)tileRangeX - (float)inventory[selectedItem].tileBoost - (float)blockRange <= (float)tileTargetX) || !((position.X + (float)width) / 16f + (float)tileRangeX + (float)inventory[selectedItem].tileBoost - 1f + (float)blockRange >= (float)tileTargetX) || !(position.Y / 16f - (float)tileRangeY - (float)inventory[selectedItem].tileBoost - (float)blockRange <= (float)tileTargetY) || !((position.Y + (float)height) / 16f + (float)tileRangeY + (float)inventory[selectedItem].tileBoost - 2f + (float)blockRange >= (float)tileTargetY);
+
+        if (ToolManager.GetTool<InfiniteReachTool>().Enabled || BuilderModeTool.Enabled)
+            blockedByRangeCheck = false;
+
+        if ((inventory[selectedItem].type != 1071 && inventory[selectedItem].type != 1543) || blockedByRangeCheck)
         {
             return;
         }
@@ -42181,7 +_,7 @@
         if (Main.tile[num, num2] != null && Main.tile[num, num2].active())
         {
             cursorItemIconEnabled = true;
-            if (ItemTimeIsZero && itemAnimation > 0 && controlUseItem)
+            if ((BuilderModeTool.Enabled || ItemTimeIsZero && itemAnimation > 0) && controlUseItem)
             {
                 TryPainting(num, num2);
             }
@@ -43008,7 +_,7 @@
         return num;
     }
 
-    private void Fishing_GetBait(out int baitPower, out int baitType)
+    public void Fishing_GetBait(out int baitPower, out int baitType)
     {
         baitPower = 0;
         baitType = 0;
@@ -44003,6 +_,7 @@
                 lastVisualizedSelectedItem = item.Clone();
             }
 
+            bool noConsumeInBuilderMode = BuilderModeTool.Enabled && (item.createTile >= 0 || item.createWall >= 0);
             if (whoAmI == Main.myPlayer)
             {
                 if (!dontConsumeWand && itemTime == (int)((float)item.useTime * tileSpeed) && item.tileWand > 0)
@@ -44062,7 +_,7 @@
 
                     if (flag6)
                     {
-                        if (item.stack > 0)
+                        if (item.stack > 0 && !noConsumeInBuilderMode)
                         {
                             item.stack--;
                         }
@@ -44075,7 +_,7 @@
                     }
                 }
 
-                if (item.stack <= 0 && itemAnimation == 0)
+                if (item.stack <= 0 && itemAnimation == 0 && !noConsumeInBuilderMode)
                 {
                     inventory[selectedItem] = new Item();
                 }
@@ -56372,8 +_,6 @@
             oldAdjTile[n] = false;
         }
 
-        hitTile = new HitTile();
-        hitReplace = new HitTile();
         mount = new Mount();
         talkNPC = -1;
         piggyBankProjTracker.Clear();
